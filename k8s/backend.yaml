apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: txt-anime
data:
  config.json: |
    {
      "server": {
        "port": 8080
      },
      "mongodb": {
        "uri": "mongodb://mongodb:27017",
        "database": "novel2comic",
        "collection": "tasks"
      },
      "ai": {
        "base_url": "https://openai.qiniu.com/v1",
        "api_key": "sk-xxx",
        "text_model": "deepseek-v3",
        "image_model": "gemini-2.5-flash-image"
      },
      "qiniu": {
        "access_key": "xx",
        "secret_key": "yy",
        "bucket": "novel2comic",
        "domain": "http://t4o5zbe8f.hd-bkt.clouddn.com"
      },
      "storage": {
        "output_dir": "./outputs"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: txt-anime
  labels:
    app: backend
spec:
  replicas: 1  # 使用持久化存储时只能有 1 个副本（ReadWriteOnce）
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      volumes:
      - name: outputs-volume
        persistentVolumeClaim:
          claimName: backend-outputs
      - name: config-volume
        configMap:
          name: backend-config
      containers:
      - name: backend
        image: aslan-spock-register.qiniu.io/qmatrix/novel2comicd-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: ENV
          value: "production"
        - name: PORT
          value: "8080"
        command: ["./novel2comicd"]
        args: ["-config", "/etc/config/config.json"]
        volumeMounts:
        - name: outputs-volume
          mountPath: /app/outputs
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: txt-anime
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
